#!/usr/bin/env python3
"""
Script de test pour diagnostiquer les probl√®mes d'import des modules Enhanced
"""

import sys
import os

# Ajouter le r√©pertoire courant au path
sys.path.insert(0, os.getcwd())

print("=== Test d'Import des Modules Enhanced ===")
print(f"Working directory: {os.getcwd()}")
print(f"Python path: {sys.path[:3]}...")

try:
    print("\n1. Test import ultralytics...")
    import ultralytics
    print(f"‚úÖ ultralytics import√© - Version: {ultralytics.__version__}")
    
    print("\n2. Test import ultralytics.nn...")
    from ultralytics import nn
    print("‚úÖ ultralytics.nn import√©")
    
    print("\n3. Test import ultralytics.nn.modules...")
    from ultralytics.nn import modules
    print("‚úÖ ultralytics.nn.modules import√©")
    
    print("\n4. Test import enhanced directement...")
    from ultralytics.nn.modules import enhanced
    print("‚úÖ ultralytics.nn.modules.enhanced import√©")
    
    print("\n5. Test import A2Module et RELAN...")
    from ultralytics.nn.modules.enhanced import A2Module, RELAN
    print("‚úÖ A2Module et RELAN import√©s directement")
    
    print("\n6. Test import via modules.__init__...")
    from ultralytics.nn.modules import A2Module, RELAN
    print("‚úÖ A2Module et RELAN import√©s via modules")
    
    print("\n7. Test de cr√©ation d'instances...")
    a2 = A2Module(64, 64)
    relan = RELAN(64, 64)
    print(f"‚úÖ Instances cr√©√©es - A2Module: {type(a2)}, RELAN: {type(relan)}")
    
    print("\n8. Test avec donn√©es factices...")
    import torch
    x = torch.randn(1, 64, 32, 32)
    
    # Test A2Module
    out_a2 = a2(x)
    print(f"‚úÖ A2Module forward - Input: {x.shape}, Output: {out_a2.shape}")
    
    # Test RELAN
    out_relan = relan(x)
    print(f"‚úÖ RELAN forward - Input: {x.shape}, Output: {out_relan.shape}")
    
    print("\nüéâ TOUS LES TESTS R√âUSSIS ! üéâ")
    
except Exception as e:
    print(f"‚ùå ERREUR: {type(e).__name__}: {e}")
    import traceback
    traceback.print_exc()
